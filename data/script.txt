CREATE TABLE products (
    id VARCHAR(255),
    alias VARCHAR(255),
    page_id VARCHAR(255),
    category_id INTEGER,
    item_name TEXT,
    item_id BIGINT PRIMARY KEY,
    description TEXT,
    item_sku VARCHAR(255),
    image TEXT,
    min_price DECIMAL,
    max_price DECIMAL,
    last_updated TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE variations (
    id SERIAL PRIMARY KEY,
    product_id BIGINT REFERENCES products(item_id),
    variation_name TEXT,
    variation_sku VARCHAR(255),
    variation_id BIGINT,
    variation_price DECIMAL,
    variation_stock INTEGER,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
-- index cho item_id, updated_at, đặt unique: product: page_id và item_id, variations: product_id và variation_id

CREATE OR REPLACE FUNCTION update_timestamp_column()
RETURNS TRIGGER AS $$
BEGIN
    IF (OLD.* IS DISTINCT FROM NEW.*) THEN
        NEW.updated_at = NOW();
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER variations_timestamp
BEFORE UPDATE ON variations
FOR EACH ROW
EXECUTE FUNCTION update_timestamp_column();

CREATE TRIGGER products_timestamp
BEFORE UPDATE ON products
FOR EACH ROW
EXECUTE FUNCTION update_timestamp_column();

-- pip install --user -U nltk